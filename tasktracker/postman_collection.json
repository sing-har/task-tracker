{
	"info": {
		"_postman_id": "365d250b-7438-4e6a-a80f-0818b43d1507",
		"name": "Task Tracker API",
		"description": "- POST `/api/tasks`\n    \n- GET `/api/tasks`\n    \n- GET `/api/tasks/{id}`\n    \n- PUT `/api/tasks/{id}`\n    \n- DELETE `/api/tasks/{id}`\n    \n- POST /auth/register\n    \n- POST /auth/login",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45566943"
	},
	"item": [
		{
			"name": "create Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer $TOKEN"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Complete Docs\",\n    \"description\": \"Add README and Postman collection\",\n    \"status\": \"PENDING\",\n    \"dueDate\": \"2025-06-10\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"tasks"
					]
				},
				"description": "#### **Create Task (POST /api/tasks)**\n\n> &lt;p &gt;Creates a new task with title, description, status, and due date. Returns the saved task object with its generated ID.&lt;/p&gt;"
			},
			"response": []
		},
		{
			"name": "get All Tasks",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer $TOKEN"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"tasks"
					]
				},
				"description": "#### **Get All Tasks (GET /api/tasks)**\n\n> &lt;p &gt;Fetches a list of all tasks currently saved in the system.&lt;/p&gt;"
			},
			"response": []
		},
		{
			"name": "get Task by Id",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer $TOKEN"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/tasks/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"tasks",
						"1"
					]
				},
				"description": "#### **Get Task by ID (GET /api/tasks/{id})**\n\n> &lt;p &gt;Retrieves a specific task by its ID. Returns 404 if the task is not found.&lt;/p&gt;"
			},
			"response": []
		},
		{
			"name": "update Task",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer $TOKEN"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Updated Title\",\n    \"description\": \"Updated Description\",\n    \"status\": \"IN_PROGRESS\",\n    \"dueDate\": \"2025-06-15\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/tasks/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"tasks",
						"1"
					]
				},
				"description": "#### **Update Task (PUT /api/tasks/{id})**\n\n> &lt;p &gt;Updates an existing task with new data. Returns the updated task. If the task doesn’t exist, an error is thrown.&lt;/p&gt;"
			},
			"response": []
		},
		{
			"name": "delete Task",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer $TOKEN"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/tasks/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"tasks",
						"1"
					]
				},
				"description": "#### **Delete Task (DELETE /api/tasks/{id})**\n\n> &lt;p &gt;Deletes a task by ID. Returns a success message. No response body is returned if the task is deleted successfully.&lt;/p&gt;"
			},
			"response": []
		},
		{
			"name": "Register User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"register"
					]
				},
				"description": "StartFragment\n\n### ✅ Method:\n\n`POST`\n\n### 🔐 Authorization:\n\n❌ Not required (public)\n\n### 🧾 Description:\n\n> \n\nRegisters a new user with a **unique username** and an **encrypted password**.  \n  \nIf the username already exists, returns a failure response.\n\n \n  \n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "Login (Get JWT Token)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"login"
					]
				},
				"description": "StartFragment\n\n### ✅ Method:\n\n`POST`\n\n### 🔐 Authorization:\n\n❌ Not required (public)\n\n### 🧾 Description:\n\n> \n\nAuthenticates the user using username and password.  \n  \nIf valid, returns a **JWT token** to access protected APIs.\n\n \n  \n\nEndFragment"
			},
			"response": []
		}
	]
}